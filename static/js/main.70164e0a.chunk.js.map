{"version":3,"sources":["LineChart.js","CheckBox.js","DateForm.js","ListSort.js","ReportMenue.js","App.js","serviceWorker.js","index.js"],"names":["LineChart","props","createBarChart","bind","this","checked","Object","keys","params","map","key","options","filter","option","isChecked","filteredData","data","d","every","o","name","includes","longName","xName","axisFields","yName","node","margin","dataMaxX","d3","dataMaxY","dataMinX","dataMinY","colorLength","reduce","agg","ind","length","myColor","domain","interpolator","selectAll","remove","attr","x","range","append","call","getBBox","height","y","text","unitMeasure","unit","lineGenerator","curve","dictList","oldDictList","newList","newKey","newDictList","forEach","obj","item","newObj","assign","push","cartesian","colorNum","filterParams","twiceFilteredData","line","lastPoint","label","html","className","unitType","ref","width","React","Component","CheckBox","onClick","handleCheckChildElement","id","type","handleKeyUp","e","tempValue","target","value","split","join","slice","onKeyUp","autocomplete","placeholder","start","onChange","handleDateChange","end","handleDateSubmit","ListSort","isOpen","togglePanel","title","listItems","handler","field","ReportMenue","reportChoices","App","state","entries","dates","report","reportIsOpen","structure","debtSecurities","URL","issuer","jsonCode","country","debtServiceRatio","borrowerType","totalCredit","valuation","dollarCredit","getObservations","toUpdate","dataList","setState","selected","updateDict","event","drawers","handleSelectReport","toggleReportlist","DateForm","size","dateRefresh","fetch","method","headers","then","response","json","console","log","observations","dataSets","obsStruct","dimensions","observation","jointAttributes","attributes","dataset","concat","entry","values","some","sort","first","second","textFirst","toUpperCase","textSecond","keyVal","index","Date","parseFloat","payload","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70164e0a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport * as d3 from 'd3'\n\nclass LineChart extends React.Component {\n   constructor(props){\n      super(props)\n      this.createBarChart = this.createBarChart.bind(this)\n\n   }\n   componentDidMount() {\n      this.createBarChart()\n   }\n   componentDidUpdate() {\n      this.createBarChart()\n   }\n   createBarChart() {\n      let checked = {};\n      \n      Object.keys(this.props.params).map((key) => {\n        checked[key] = this.props.params[key].options.filter(option=>option.isChecked==true);\n      });\n      \n\n      let filteredData = this.props.data.filter(d => {\n\n         return(\n                Object.keys(checked).every((key) => \n                checked[key].map(o=>o.name)\n                .includes(d[this.props.params[key].longName])\n                )\n            )\n      });\n\n\n\n\n      var xName = this.props.axisFields.xName;\n      var yName = this.props.axisFields.yName;\n\n      const node = this.node\n      var margin = {top: 30, right: 90, bottom: 30, left: 90};\n      \n      var dataMaxX = d3.max(filteredData.map(d=>d[xName]));\n      var dataMaxY = d3.max(filteredData.map(d=>d[yName]));\n      \n      var dataMinX = d3.min(filteredData.map(d=>d[xName]));\n      var dataMinY = d3.min(filteredData.map(d=>d[yName]));\n\n      var width = 400;\n      var height = 400;\n\n\n      let colorLength = Object.keys(checked).reduce((agg,ind) => agg * checked[ind].length, 1)\n\n      var myColor = d3.scaleSequential().domain([1,colorLength])\n         .interpolator(d3.interpolatePiYG);\n\n      \n      d3.select(node)\n        .selectAll(\"svg > *\")\n        .remove();\n\n      d3.select(node)\n         .attr('tranform','translate(' + margin.left + ', ' + margin.top + ')');\n\n      // add x axis\n      var x = d3.scaleTime()\n                .domain([dataMinX, dataMaxX])\n                .range([ 0, width ]);\n\n      d3.select(node)\n         .append(\"g\")\n         .attr(\"class\",\"xaxis\")\n         .attr(\"transform\",'translate(' + margin.left + ', ' + (margin.top+height) + ')')\n         .call(d3.axisBottom(x));\n\n      d3.select(node)\n         .selectAll(\".xaxis text\")\n         .attr(\"transform\", function(d) {\n              return \"translate(\" + this.getBBox().height*-2 + \",\" + this.getBBox().height + \")rotate(-45)\";\n         });\n      // add y axis\n      var y = d3.scaleLinear()\n                .domain([dataMinY, dataMaxY])\n                .range([height, 0]);\n\n      d3.select(node)\n         .append(\"g\")\n         .attr(\"class\",\"yaxis\")\n         .attr(\"transform\",'translate(' + margin.left + ', ' + margin.top + ')')\n         .call(d3.axisLeft(y));\n      \n      d3.select(node)\n          .append('g')\n          .append(\"text\")\n          .attr(\"class\",\"yaxis-label\")\n          .attr(\"text-anchor\", \"end\")\n          .attr(\"transform\", \"translate(\"+(margin.left-70)+\",150)rotate(-90)\")\n          .text( this.props.unitMeasure +', '+this.props.unit);\n\n      var lineGenerator = d3.line()\n         .x(function(d) {\n            return x(d[xName]);\n         })\n         .y(function(d) {\n            return y(d[yName]);\n         })\n         .curve(d3.curveCardinal);\n\n      \n\n      function cartesian(oldDictList,newList, newKey) {\n\n        let newDictList = [];\n\n        oldDictList.forEach((obj) => {\n          newList.forEach((item) => {\n            let newObj = Object.assign({}, obj);\n            newObj[newKey] = item;\n            newDictList.push(newObj)\n          })\n          \n        })\n\n        return(newDictList);\n      }\n\n      //compose cartesians of checked \n      let dictList = [{}];\n      Object.keys(checked).map((key) => {\n\n        dictList = cartesian(dictList,checked[key],key);\n\n      });\n\n\n      let colorNum = 1;\n\n      dictList.map((filterParams) => {\n         let twiceFilteredData = filteredData.filter(d=>{\n            let isFiltered = Object.keys(filterParams).every((key) => {\n\n              return(filterParams[key].name == d[this.props.params[key].longName])\n            })\n            return(isFiltered)\n         });\n\n         if (twiceFilteredData.length>0) {\n             var line = lineGenerator(twiceFilteredData);\n             var item = d3.select(node)\n                          .append('g')\n                          .attr(\"class\",\"item\")\n\n             item.append('path')\n                .attr('d', line)\n                .attr(\"transform\",'translate(' + margin.left + ', ' + margin.top + ')')\n                .attr('stroke', myColor(colorNum))\n                .attr('stroke-width','2')\n                .attr(\"fill\",\"none\")\n\n             let lastPoint = twiceFilteredData[twiceFilteredData.length-1];\n\n             let label = Object.keys(filterParams).reduce((agg, key)=> agg+'<br>'+filterParams[key].name, \"\")\n\n             var foreignObject = item.append('foreignObject')\n                 .attr('transform',\"translate(\" + (width+margin.left+30) + \",\"+(y(lastPoint[yName])-30)+\")\")\n                 .attr('width','300')\n                 .attr('height','300')\n                 .append('xhtml:div')\n                 .html('<p class=\"line-label\">'+label+'</p>')\n\n\n          }\n\n        colorNum = colorNum + 1;\n      });\n\n\n   }\n\nrender() {\n      return (\n            <div className='graph'>\n               <div>\n                  <h3 className = 'chart-title'>{this.props.name + (this.props.unitType.length>0 ? ' ('+this.props.unitType+')' : \"\") }</h3>\n                  <svg ref={node => this.node = node}\n                        width={800} height={500}>\n                  </svg>\n               </div>\n            </div>)\n   }\n}\nexport default LineChart","import React from 'react'\n\nexport const CheckBox = props => {\n    return (\n      <li className = 'option-list-item' onClick={()=>props.handleCheckChildElement()}>\n\n       <div className = 'item-checkbox'>\n       \t\t<input key={props.id} \n              type=\"checkbox\" \n              checked={props.isChecked} \n              name={props.name} \n              /> \n             <div className=\"checkmark\"></div>\n        </div>\n        <div className = 'item-text'>\n        \t<label>{props.name}</label>\n        </div>\n\n      </li>\n    )\n}\n\nexport default CheckBox","import React from 'react'\n\nclass CheckBox extends React.Component {\n    constructor(props) {\n    \tsuper(props);\n\n    \tthis.handleKeyUp = this.handleKeyUp.bind(this);\n    }\n\n    handleKeyUp(e) {\n    \tlet tempValue = e.target.value.split('-').join('');\n\n    \tif (tempValue.length > 4) {\n    \t\ttempValue = tempValue.slice(0,4) + '-'+tempValue.slice(4)\n    \t}\n    \tif (tempValue.length > 7) {\n    \t\ttempValue = tempValue.slice(0,7) + '-' + tempValue.slice(7)\n    \t}\n    \tif (tempValue.length > 10) {\n    \t\ttempValue = tempValue.slice(0,10)\n    \t}\n\n    \te.target.value = tempValue\n\n    }\n\n    render () {\n    \treturn (\n    \t<>\n\t    \t<div className = \"drawer-date\">\n\t\t\t\t<label className = \"drawer-date-text\">\n\t\t\t\t    Start:\n\t\t\t\t    <input onKeyUp = {this.handleKeyUp} autocomplete='off' className = \"drawer-date-input\" type=\"text\" placeholder = {this.props.start} name='start' onChange={this.props.handleDateChange} />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className = \"drawer-date\">\n\t\t\t\t<label className = \"drawer-date-text\">\n\t\t\t\t    End:\n\t\t\t\t    <input onKeyUp = {this.handleKeyUp} autocomplete='off' className = \"drawer-date-input\" type=\"text\" placeholder = {this.props.end} name='end' onChange={this.props.handleDateChange} />\n\t\t\t\t</label>\n\n\t\t\t</div>\n\t\t\t<div className=\"drawer-submit\">\n\t\t\t\t<div className = \"drawer-submit-button\" onClick = {this.props.handleDateSubmit}>\n\t\t\t\t\t<label className = \"drawer-date-text\">\n\t\t\t\t\tReload\n\t\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n    \t)\n    }\n\n}\n\nexport default CheckBox","import React from 'react'\nimport CheckBox from './CheckBox'\n\n\nclass ListSort extends React.Component {\n    constructor(props) {\n    \tsuper(props);\n\n\n    }\n\n    render() {\n\t    return(<div className = 'drawer'>\n          \t\t<div className = {this.props.isOpen ? 'drawer-title-black': 'drawer-title'}\n          \t\tonClick = {()=>this.props.togglePanel()}>\n          \t\t\t<label className = 'drawer-date-text'>{this.props.title}</label>\n          \t\t</div>\n          {this.props.isOpen ? (<div className = 'options'>\n  \t          <ul className = 'option-list'>\n  \t          {\n  \t            this.props.listItems.map((option) => {\n  \t              return (<CheckBox handleCheckChildElement={() => this.props.handler(option.name, this.props.field)} {...option} />)\n  \t            })\n  \t          }\n  \t          </ul>\n  \t      </div>): null}\n        </div>)\n    }\n}\n\n\n\nexport default ListSort","import React from 'react'\n\n\nclass ReportMenue extends React.Component {\n    constructor(props) {\n    \tsuper(props);\n\n\n    }\n\n    render() {\n\t    return(<div className = 'drawer'>\n          \t\t<div className = {this.props.isOpen ? 'drawer-title-black': 'drawer-title'}\n          \t\tonClick = {()=>this.props.togglePanel()}>\n          \t\t\t<label className = 'drawer-date-text'>{this.props.title}</label>\n          \t\t</div>\n          {this.props.isOpen ? (<div className = 'report-options'>\n  \t          <ul className = 'option-list'>\n  \t          {\n  \t            Object.keys(this.props.reportChoices).map((option) => {\n  \t              return ( <li className = 'option-list-item'onClick = {()=>this.props.handler(option)}>\n                              <div className = 'item-text'>\n                                <label>{option}</label>\n                              </div>\n                            </li>)\n  \t            })\n  \t          }\n  \t          </ul>\n  \t      </div>): null}\n        </div>)\n    }\n}\n\n\n\nexport default ReportMenue","import React from 'react'\nimport './App.css'\nimport LineChart from './LineChart'\nimport CheckBox from './CheckBox'\nimport DateForm from './DateForm'\nimport ListSort from './ListSort'\nimport ReportMenue from './ReportMenue'\n\nclass App extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n    this.state = {\n      unit: \"\",\n      unitMeasure: \"\",\n      unitType: \"\",\n      entries: [],\n      name: \"\",\n      dates: {start: '2015-01-01', end: '2019-12-01'},\n      report: \"debtServiceRatio\",\n      reportChoices: {'USD Debt':'debtSecurities','Debt Service Ratio':'debtServiceRatio','Total Credit':'totalCredit', 'Dollar Credit':'dollarCredit'},\n      reportIsOpen: false,\n      structure: {\n        debtSecurities: {\n            \n          URL: (start, end) => \"https://stats.bis.org/sdmx/data/BIS,WEBSTATS_DEBTSEC_DATAFLOW,1.0/..3P.1+2+7+B+E+G+I+\"+\n                                \"J+K+S.1.C..A.USD.A.A.A...I?locale=*&format=sdmx-json&startPeriod=\"+start+\"&endPeriod=\"+end+\"&\"+\n                                \"includeMetadata=true&dimensionAtObservation=AllDimensions&includeAllAnnotations=true\",\n\n          params: {\n            issuer: {\n              options: [],\n              isOpen: false,\n              title: 'Issuer Type',\n              jsonCode: 'ISSUER_BUS_IMM',\n              longName: 'Issuer sector - immediate borrower'\n            },\n\n            country: {\n              options: [],\n              isOpen: false,\n              title: 'Issuer Country',\n              jsonCode: 'ISSUER_RES',\n              longName: 'Issuer residence'\n            },\n          },\n\n          axisFields: {\n            xName: \"end\",\n            yName: \"value\",\n          },\n\n          title: 'Dollar-Denominated Non-Resident Debt Securities'\n        },\n\n        debtServiceRatio: {\n            \n          URL: (start, end) => \"https://stats.bis.org/sdmx/data/BIS,WEBSTATS_DSR_DATAFLOW,1.0/\"+\n                               \".AU+BE+BR+CA+CH+CN+CZ+DE+DK+ES+FI+FR+GB+HK+HU+ID+IN+IT+JP+KR+MX+\"+\n                               \"MY+NL+NO+PL+PT+RU+SE+TH+TR+US+ZA.H+N+P?locale=*&format=sdmx-json&\"+\n                               \"startPeriod=\"+start+\"&endPeriod=\"+end+\"&includeMetadata=true&\"+\n                               \"dimensionAtObservation=AllDimensions&includeAllAnnotations=true\",\n\n          params: {\n            borrowerType: {\n              options: [],\n              isOpen: false,\n              title: 'Borrower Type',\n              jsonCode: 'DSR_BORROWERS',\n              longName: 'Borrowers'\n            },\n\n            country: {\n              options: [],\n              isOpen: false,\n              title: 'Borrower Country',\n              jsonCode: 'BORROWERS_CTY',\n              longName: \"Borrowers' country\"\n            },\n          },\n\n          axisFields: {\n            xName: \"end\",\n            yName: \"value\",\n          },\n\n          title: 'Debt Service Ratio'\n        },\n\n        totalCredit: {\n            \n          URL: (start, end) => \"https://stats.bis.org/sdmx/data/BIS,WEBSTATS_TOTAL_CREDIT_DATAFLOW,\"+\n                               \"2.0/.4T+5A+5R+AR+AT+AU+BE+BR+CA+CH+CL+CN+CO+CZ+DE+DK+ES+FI+FR+G2+GB\"+\n                               \"+GR+HK+HU+ID+IE+IL+IN+IT+JP+KR+LU+MX+MY+NL+NO+NZ+PL+PT+RU+SA+SE+SG+\"+\n                               \"TH+TR+US+XM+ZA.C+G+H+N+P.A.M+N.770.A?locale=*&format=sdmx-json&\"+\n                               \"startPeriod=\"+start+\"&endPeriod=\"+end+\"&includeMetadata=true&dimensionAtObservation=\"+\n                               \"AllDimensions&includeAllAnnotations=true\",\n\n          params: {\n            borrowerType: {\n              options: [],\n              isOpen: false,\n              title: 'Borrower Type',\n              jsonCode: 'TC_BORROWERS',\n              longName: 'Borrowing sector'\n            },\n\n            valuation: {\n              options: [],\n              isOpen: false,\n              title: 'Valuation',\n              jsonCode: 'VALUATION',\n              longName: \"Valuation\"\n            },\n\n            country: {\n              options: [],\n              isOpen: false,\n              title: 'Borrower Country',\n              jsonCode: 'BORROWERS_CTY',\n              longName: \"Borrowers' country\"\n            },\n\n          },\n\n          axisFields: {\n            xName: \"end\",\n            yName: \"value\",\n          },\n\n          title: 'Total Credit'\n        },\n\n        dollarCredit: {\n            \n          URL: (start, end) => \"https://stats.bis.org/sdmx/data/BIS,WEBSTATS_GLI_DATAFLOW,1.0/.USD.\"+\n                               \"2A+2R+3C+3P+4T+4U+4W+4Y+5C+5J+6E+AR+BR+CL+CN+ID+IN+JP+KR+MX+MY+RU+SA\"+\n                               \"+TR+TW+US+ZA.N.A.I.B.USD?locale=*&format=sdmx-json&\"+\n                               \"startPeriod=\"+start+\"&endPeriod=\"+end+\"&includeMetadata=true\"+\n                               \"&dimensionAtObservation=AllDimensions&includeAllAnnotations=true\",\n\n/*                              https://stats.bis.org/sdmx/data/BIS,WEBSTATS_GLI_DATAFLOW,1.0/.USD.\"+\n                               \"2A+2R+3C+3P+4T+4U+4W+4Y+5C+5J+6E+AR+BR+CL+CN+ID+IN+JP+KR+MX+MY+RU+SA\"+\n                               \"+TR+TW+US+ZA.N.A.I.B.USD?locale=*&format=sdmx-json&\"+\n                               \"startPeriod=\"+start+\"&endPeriod=\"+end+\"&includeMetadata=true\"+\n                               \"&dimensionAtObservation=AllDimensions&includeAllAnnotations=true*/\n\n          params: {\n\n            country: {\n              options: [],\n              isOpen: false,\n              title: 'Borrower Country',\n              jsonCode: 'BORROWERS_CTY',\n              longName: \"Borrowers' country\"\n            },\n\n          },\n\n          axisFields: {\n            xName: \"end\",\n            yName: \"value\",\n          },\n\n          title: 'Total Dollar Credit'\n        }\n      }\n    }\n    \n  }\n\n  componentDidMount() {\n    this.getObservations();\n  }\n\n  handleCheckChildElement(name, toUpdate) {\n    let dataList = this.state.structure\n\n\n    dataList[this.state.report].params[toUpdate].options.forEach(option => {\n       if (option.name === name)\n          option.isChecked =  !option.isChecked;\n    })\n    this.setState({structure: dataList})\n  }\n\n  handleSelectReport(selected) {\n    this.setState({report: this.state.reportChoices[selected]},this.getObservations)\n  }\n\n  togglePanel(toUpdate) {\n      \n      let updateDict = this.state.structure;\n\n      Object.keys(updateDict[this.state.report].params).map((key) => {\n        if (key != toUpdate) {\n          updateDict[this.state.report].params[key]['isOpen'] = false\n        }\n\n      });\n      updateDict[this.state.report].params[toUpdate]['isOpen'] = !updateDict[this.state.report].params[toUpdate]['isOpen'];\n      this.setState({structure: updateDict})\n    }\n\n  toggleReportlist() {\n    this.setState({reportIsOpen: !this.state.reportIsOpen});\n  }\n\n  handleDateChange(event) {\n\n    let dates = this.state.dates;\n    dates[event.target.name] = event.target.value;\n\n    this.setState({dates: dates});\n\n  }\n\n\n\n  render () {\n  \n    let drawers = Object.keys(this.state.structure[this.state.report].params).map((key)=>{\n        return(\n            <ListSort title = {this.state.structure[this.state.report].params[key].title}\n                      isOpen = {this.state.structure[this.state.report].params[key].isOpen}\n                      listItems={this.state.structure[this.state.report].params[key].options} \n                      field= {key} \n                      handler={(name, field) => this.handleCheckChildElement(name, field)}\n                      togglePanel = {()=>this.togglePanel(key)}/>\n        )\n    });\n\n   return (\n      <div className='App'>\n        <div className='dash-panel'>\n          \n          <div className=\"graph-options\">\n\n            <ReportMenue title = 'Report'\n                        isOpen = {this.state.reportIsOpen}\n                        reportChoices={this.state.reportChoices} \n                        handler={(selected) => this.handleSelectReport(selected)}\n                        togglePanel = {()=>this.toggleReportlist()}/>\n\n            <DateForm start = {this.state.dates.start}\n                      end = {this.state.dates.end}\n                      handleDateChange = {(e)=>this.handleDateChange(e)}\n                      handleDateSubmit = {()=> this.getObservations(true)}/>\n\n            <div className='cabinet'>\n              {drawers}\n            </div>\n          </div>\n\n          <LineChart name = {this.state.structure[this.state.report].title}\n                     data={this.state.entries}\n                     axisFields = {this.state.structure[this.state.report].axisFields}\n                     params = {this.state.structure[this.state.report].params} \n                     unit = {this.state.unit}\n                     unitMeasure = {this.state.unitMeasure}\n                     unitType = {this.state.unitType}\n                     size={[500,500]} />\n\n        </div>\n      </div>\n   );\n  }\n\n  getObservations(dateRefresh) {\n \n    let URL = this.state.structure[this.state.report].URL(this.state.dates.start, this.state.dates.end)\n\n\n    let PROXY = \"https://cors-anywhere.herokuapp.com/\"\n\n\n    let r = fetch(PROXY+URL, {\n      method: 'GET',\n      headers: {\n          'Content-Type':'application/json'\n      }\n    }).then(response => response.json())\n      .then(data=> {\n        console.log(data);\n        let name = data.structure.name;\n        let observations = data.dataSets[0].observations;\n        let obsStruct = data.structure.dimensions.observation;\n        \n        let jointAttributes = data.structure.attributes.dataset.concat(data.structure.attributes.observation)\n                                  .concat(data.structure.dimensions.dataset).concat(data.structure.dimensions.observation);\n\n        let unit = jointAttributes\n                    .filter(entry => entry.id == 'UNIT_MULT')[0]\n                    .values[0].name;\n        let unitMeasure = jointAttributes\n                    .filter(entry => entry.id == 'UNIT_MEASURE')[0]\n                    .values[0].name;\n\n        let unitType = \"\";\n\n        if (jointAttributes.some(entry => entry.id ==\"UNIT_TYPE\")){\n          unitType = jointAttributes\n                    .filter(entry => entry.id == \"UNIT_TYPE\")[0]\n                    .values[0].name;\n        }\n\n        let options = {};\n        \n        Object.keys(this.state.structure[this.state.report].params).map((key) => {\n          let jsonCode = this.state.structure[this.state.report].params[key].jsonCode\n\n          options[key] = obsStruct.filter(d=>d.id==jsonCode)[0].values.map(d=> {\n            var o = Object.assign({}, d);\n              o.isChecked = false;\n              return o;\n          }).sort((first, second) => {\n            var textFirst  = first.name.toUpperCase();\n            var textSecond = second.name.toUpperCase();\n            return (textFirst < textSecond) ? -1 : (textFirst > textSecond) ? 1 : 0;\n          });\n\n        });\n\n\n        let entries = [];\n\n        Object.keys(observations).map((key) => {\n          let entry = {};\n          key.split(':').map((keyVal, index) => {\n            entry[obsStruct[index].name]= obsStruct[index].values[keyVal].name;\n            if (obsStruct[index].name == \"Time period or range\") {\n              entry['start'] = new Date(obsStruct[index].values[keyVal].start);\n              entry['end'] = new Date(obsStruct[index].values[keyVal].end);\n            }\n          });\n          \n          entry['value'] = parseFloat(observations[key]);\n\n          entries = entries.concat([entry]);\n\n\n        });\n        \n        entries = entries.sort((first,second) => {\n          return first.end-second.end;\n        });\n\n        let payload = {}\n        if (dateRefresh==true) {\n          payload = {entries: entries}\n\n        } else {\n          \n          let structure = this.state.structure;\n\n          Object.keys(structure[this.state.report].params).map((key) => {\n            structure[this.state.report].params[key]['options'] = options[key];\n          });\n\n          payload = {name: name, unit: unit, unitMeasure: unitMeasure, unitType: unitType, entries: entries, structure: structure};\n \n        }\n        \n        this.setState(payload);\n \n    });\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}